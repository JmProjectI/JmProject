@using JMProject.Model.Sys;
@using JMProject.Common
@using JMProject.Web.Core;
@model JMProject.Model.FinOutStock
@{
    ViewBag.Title = "出库单";
    Layout = "~/Views/Shared/_LayoutEedit.cshtml";
    List<permModel> perm = (List<permModel>)ViewBag.Perm;
    if (perm == null)
    {
        perm = new List<permModel>();
    }
}
<script type="text/javascript">
    var editIndex = undefined; //上一次编辑行索引

    function bindGroup() {
        //状态        
    };

    function AddRows(rows) {

        var ItemId = $('#gridOrder').datagrid('getSelected').ItemId;

        $.each(rows, function (index, item) {
            $('#grid').datagrid('appendRow', {
                SaleOrderItemId: ItemId,
                ProductType: item.TypeId,
                TypeName: item.TypeName,
                ProductId: item.Id,
                ProName: item.Name,
                ProSpec: item.Spec,
                ProUcount: item.Ucount,
                ProPkey: item.Pkey,
                Marketprice: item.Marketprice,
                Costprice: item.Costprice,
                OutStockCount: '1'
            });
        });
    };

    $(function () {
        bindGroup();
        reloadDesc();
        reload();
        /*保持*/
        $("#btnSave").click(function () {

            if (editIndex != undefined) {
                $('#grid').datagrid('endEdit', editIndex);
                editIndex = undefined;
            }
            $('#grid').datagrid('clearSelections');
            var rows = $('#grid').datagrid('getRows');
            if (rows == null || rows.length < 1) {
                window.parent.frameReturnByMesAlert('无出库商品');
                return false;
            }

            if ($("#CreateForm").form('validate')) {
                var postData = {
                    OSId: $("#OSId").val()
                    , OrderId: $("#OrderId").val()
                    , OSdate: $("input[name='OSdate']").val()
                    , Products: JSON.stringify(rows)
                    , AddType: $("#AddType").val()
                };

                $.ajax({
                    url: "/Financial/Create_FinOutStock",
                    type: "Post",
                    data: postData,
                    dataType: "json",
                    success: function (data) {
                        if (data.type == 1) {
                            window.parent.frameReturnByMes(data.message);
                            window.parent.frameReturnByReload(false);
                            window.parent.frameReturnByClose()
                        }
                        else {
                            window.parent.frameReturnByMesAlert(data.message);
                        }
                    }
                });
            }
            return false;
        });
        /*返回*/
        $("#btnReturn").click(function () {
            window.parent.frameReturnByClose();
        });
        /*删除产品*/
        $("#btnRemove").click(function () {
            if (editIndex == undefined) {
                window.parent.frameReturnByMesAlert('@Suggestion.PlaseChoose');
                return;
            }
            $.messager.confirm('@Suggestion.Tip', '@Suggestion.YouWantToDelete', function (r) {
                if (r) {
                    $('#grid').datagrid('cancelEdit', editIndex).datagrid('deleteRow', editIndex);
                    editIndex = undefined;
                }
            });
        });

        /*添加产品*/
        $("#btnAdd").click(function () {
            var row = $('#gridOrder').datagrid('getSelected');
            if (row != null) {
                window.parent.OpenProduct(row.ProdectType);
            } else { window.parent.frameReturnByMesAlert("请选择一项合同明细"); }
        });
    });

    /*合同与出库比对*/
    function reloadDesc() {
        var queryData = {
            Id: $("#OrderId").val()
        };
        InitGridDesc(queryData);
        $('#gridOrder').datagrid('clearSelections');
    };

    function InitGridDesc(queryData) {
        $('#gridOrder').datagrid({
            url: '/Sale/GetData_SaleOrderItem',
            title: '合同明细',
            width: 740,
            methord: 'post',
            height: 140,
            fitColumns: false,
            idField: 'ItemId',
            sortName: 'ItemId',
            sortOrder: 'asc',
            pagination: false,
            striped: true, //奇偶行是否区分
            singleSelect: true, //单选模式
            queryParams: queryData,
            columns: [[
                    { field: 'TypeName', title: '商品分类', width: 100 },
                    { field: 'ProdectDesc', title: '商品参数(描述)', width: 170 },
                    { field: 'ItemCount', title: '成交数量', width: 80 },
                    { field: 'OSCount', title: '已出库数', width: 80 },
                    { field: 'OutStockCount', title: '可出库数', width: 80
                        , formatter: function (value, row) {
                            return Number(row.ItemCount) - Number(row.OSCount);
                        }
                    },
                    { field: 'ItemPrice', title: '成交单价', width: 80 },
                    { field: 'ItemMoney', title: '成交金额', width: 80 }
            ]]
        });
    };

    function reload() {
        var queryData = {
            Id: $("#OSId").val()
        };
        InitGrid(queryData);
        $('#grid').datagrid('clearSelections');
    };

    function InitGrid(queryData) {
        $('#grid').datagrid({
            url: '/Financial/GetData_FinOutStockItem',
            title: '出库明细',
            width: 740,
            methord: 'post',
            height: 310,
            fitColumns: false,
            idField: 'SaleOrderItemId',
            sortName: 'SaleOrderItemId',
            sortOrder: 'asc',
            pagination: false,
            striped: true, //奇偶行是否区分
            singleSelect: true, //单选模式
            queryParams: queryData,
            columns: [[
                    { field: 'TypeName', title: '商品分类', width: 90 },
                    { field: 'ProName', title: '商品名称', width: 110 },
                    { field: 'ProSpec', title: '规格参数', width: 70 },
                    { field: 'ProUcount', title: '许可用户数', width: 70 },
                    { field: 'ProPkey', title: '序列号', width: 100 },
                    { field: 'Marketprice', title: '市场定价', width: 80, editor: { type: 'numberbox', options: { precision: 2}} },
            //{ field: 'Costprice', title: '成本单价', width: 80, editor: { type: 'numberbox', options: { precision: 2}} },
                    {field: 'OutStockCount', title: '本次出库数', width: 80, editor: { type: 'numberbox', options: { precision: 0}} }
                ]],
            onClickCell: onClickCell
        });

        function endEditing() {
            if (editIndex == undefined) { return true }
            if ($('#grid').datagrid('validateRow', editIndex)) {
                $('#grid').datagrid('endEdit', editIndex);
                editIndex = undefined;
                return true;
            } else {
                return false;
            }
        };

        function onClickCell(index, field) {
            if (editIndex != index) {
                if (endEditing()) {
                    $('#grid').datagrid('selectRow', index).datagrid('beginEdit', index);

                    var ed = $('#grid').datagrid('getEditor', { index: index, field: field });
                    if (ed) {
                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                    }
                    editIndex = index;
                } else {
                    setTimeout(function () {
                        $('#grid').datagrid('selectRow', editIndex);
                    }, 0);
                }
            }
        }
    };
</script>
<input id="AddType" name="AddType" type="hidden" value="@ViewBag.AddType" />
<input id="OrderId" name="OrderId" type="hidden" value="@Model.OrderId" />
<input id="OSId" name="OSId" type="hidden" value="@Model.OSId" />
<div class="divtool bgb">
    @Html.ToolButton("btnSave", "icon-save", Suggestion.Save, false)
    @Html.ToolButton("btnReturn", "icon-return", Suggestion.Return, true)
    @Html.ToolButton("btnAdd", "icon-add", "添加行", false)
    @Html.ToolButton("btnRemove", "icon-remove", "删除行", false)
</div>
<form id="CreateForm" method="post">
<table class="form_table">
    <tbody>
        <tr style="height: 40px;">
            <th>
                出库日期
            </th>
            <td>
                <input id="OSdate" type="text" name="OSdate" class="easyui-validatebox easyui-datebox" required="true" value="@Model.OSdate" />
            </td>
            <th>
                @if (!string.IsNullOrEmpty(ViewBag.Account))
                {
                    <span>经手人</span>
                }
            </th>
            <td>
                @if (!string.IsNullOrEmpty(ViewBag.Account))
                {
                    <input type="text" name="UserId" class="easyui-validatebox" maxlength="6" readonly="readonly" required="true" value="@ViewBag.Account" />
                }
            </td>
        </tr>
        <tr>
            <td colspan="4" style="padding-left: 20px;">
                <table id="gridOrder">
                </table>
            </td>
        </tr>
        <tr>
            <td colspan="4" style="padding-left: 20px;">
                <table id="grid">
                </table>
            </td>
        </tr>
    </tbody>
</table>
</form>
