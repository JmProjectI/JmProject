@using JMProject.Model.Sys;
@using JMProject.Common
@using JMProject.Web.Core;
@model JMProject.Model.View.View_SaleOrder
@{
    ViewBag.Title = "确认产品";
    Layout = "~/Views/Shared/_LayoutEedit.cshtml";
    AccountModel Account = (AccountModel)ViewBag.Account; 
}
<script type="text/javascript">
    var editIndex = undefined; //上一次编辑行索引

    function BindComb() {
        //客户
        $('#SaleCustomId').combobox({
            url: '/Sale/GetData_SaleCustom_Comb',
            valueField: 'ID',
            textField: 'Name',
            onLoadSuccess: function (node, data) {
                $("#SaleCustomId").combobox('setValue', '@Model.SaleCustomId');
            },
            onSelect: function (record) {
                $.ajax({
                    url: '/Sale/GetData_SaleCustom_Model',
                    type: "Post",
                    data: { ID: record.ID },
                    dataType: "json",
                    success: function (data) {
                        $("#Saler").combobox('setValue', data.Ywy);
                        $("#span_CityName").html(data.CityName);
                    }
                });
            }
        });

        //业务员
        $('#Saler').combobox({
            url: '/System/GetComb_Users',
            valueField: 'Id',
            textField: 'ZsName',
            onLoadSuccess: function (node, data) {
                $("#Saler").combobox('setValue', '@Model.Saler');
            }
        });

        //账户
        $('#AccountId').combobox({
            url: '/Basic/GetComb_BasicAccount',
            valueField: 'Id',
            textField: 'Key',
            onLoadSuccess: function (node, data) {
                $("#AccountId").combobox('setValue', '@Model.AccountId');
            },
            onShowPanel: function () {
                // 动态调整高度  
                $(this).combobox('panel').height(140);
            }
        });

        //合同类别 
        $('#OrderType').combobox({
            url: '/Basic/GetComb_DictionaryItem?DicID=016',
            valueField: 'ItemID',
            textField: 'ItemName',
            onLoadSuccess: function (node, data) {
                $("#OrderType").combobox('setValue', '@Model.OrderType');
            }
        });
    };

    $(function () {

        BindComb();
        reload();
        /*保持*/
        $("#btnSave").click(function () {
            if (editIndex != undefined) {
                $('#grid').datagrid('endEdit', editIndex);
                editIndex = undefined;
            }
            $('#grid').datagrid('clearSelections');
            var rows = $('#grid').datagrid('getRows');
            if (rows == null || rows.length < 1) {
                window.parent.frameReturnByMes('请添加商品');
                return false;
            }
            if ($("#CreateForm").form('validate')) {
                var postData = {
                    Id: $("input[name='Id']").val()
                    , Products: JSON.stringify(rows)
                    , AddType: $("#AddType").val()
                };

                $.ajax({
                    url: "/Sale/Create_SaleOrderP",
                    type: "Post",
                    data: postData,
                    dataType: "json",
                    success: function (data) {
                        if (data.type == 1) {
                            window.parent.frameReturnByMes(data.message);
                            window.parent.frameReturnByReload(false);
                            window.parent.frameReturnByClose()
                        }
                        else {
                            window.parent.frameReturnByMes(data.message);
                        }
                    }
                });
            }
            return false;
        });

        /*返回*/
        $("#btnReturn").click(function () {
            window.parent.frameReturnByClose();
        });
    });

    function reload() {
        var queryData = {
            Id: $("#Id").val()
        };
        InitGrid(queryData);
        $('#grid').datagrid('clearSelections');
    };

    function InitGrid(queryData) {
        $('#grid').datagrid({
            url: '/Sale/GetData_SaleOrderItem',
            width: 984,
            methord: 'post',
            height: 300,
            fitColumns: false,
            idField: 'ItemId',
            sortName: 'ItemId',
            sortOrder: 'asc',
            pagination: false,
            striped: true, //奇偶行是否区分
            singleSelect: true, //单选模式
            queryParams: queryData,
            columns: [[
              { field: 'ItemId', title: '编号', width: 90, hidden: 'true' },
              { field: 'TypeName', title: '商品分类', width: 90 },
              { field: 'ProName', title: '商品名称', width: 100 },
              { field: 'ProSpec', title: '规格参数', width: 100, editor: { type: 'text'} },
              { field: 'ProUcount', title: '许可用户数', width: 100, editor: { type: 'text'} },
              { field: 'ProPkey', title: '商品序列号', width: 100, editor: { type: 'text'} },
              { field: 'Marketprice', title: '市场定价', width: 65, editor: { type: 'numberbox', options: { precision: 0}} },
              { field: 'Costprice', title: '成本价格', width: 65, editor: { type: 'numberbox', options: { precision: 0}} }, //, hidden: 'true'
              {field: 'ItemCount', title: '成交数量', width: 60 },
              { field: 'ItemPrice', title: '成交单价', width: 80 },
              { field: 'ItemMoney', title: '成交金额', width: 80},
              { field: 'TaxMoney', title: '税金', width: 70 },
              { field: 'PresentMoney', title: '礼品金额', width: 75 },
              { field: 'OtherMoney', title: '其他费用', width: 75 },
            //{ field: 'ValidMoney', title: '有效回款', width: 90, editor: { type: 'numberbox', options: { precision: 2}} },
              {field: 'Service', title: '含服务', width: 50 },
              { field: 'SerDateS', title: '服务开始日期', width: 100 },
              { field: 'SerDateE', title: '服务结束日期', width: 100 }
            ]],
            onClickCell: onClickCell
        });
    };

    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#grid').datagrid('validateRow', editIndex)) {
            $('#grid').datagrid('endEdit', editIndex);
            editIndex = undefined;
            return true;
        } else {
            return false;
        }
    };

    function onClickCell(index, field) {
        if (editIndex != index) {
            if (endEditing()) {
                $('#grid').datagrid('selectRow', index).datagrid('beginEdit', index);

                var ed = $('#grid').datagrid('getEditor', { index: index, field: field });
                if (ed) {
                    ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                }
                editIndex = index;
            } else {
                setTimeout(function () {
                    $('#grid').datagrid('selectRow', editIndex);
                }, 0);
            }
        }
    };
</script>
<input id="AddType" name="AddType" type="hidden" value="@ViewBag.AddType" />
<input id="Id" name="Id" type="hidden" value="@Model.Id" />
<div class="divtool bgb">
    @Html.ToolButton("btnSave", "icon-save", Suggestion.Save, false)
    @Html.ToolButton("btnReturn", "icon-return", Suggestion.Return, true)
</div>
<form id="CreateForm" method="post">
<table class="form_table">
    <tbody>
        <tr style="height: 38px;">
            <th>
                日期
            </th>
            <td>
                <input type="text" name="OrderDate" class="easyui-validatebox" readonly="readonly" required="true" value="@Model.OrderDate" />
            </td>
            <th>
                客户
            </th>
            <td>
                <input type="text" id="SaleCustomId" name="SaleCustomId" class="easyui-combobox" required="true" readonly="readonly" />
            </td>
            <th>
                业务员
            </th>
            <td>
                <input type="text" id="Saler" name="Saler" class="easyui-combobox" required="true" editable="false" value="@Model.Saler" readonly="readonly" />
            </td>
        </tr>
        <tr style="height: 38px;">
            <th>
                账户
            </th>
            <td>
                <input type="text" id="AccountId" name="AccountId" class="easyui-combobox" required="true" readonly="readonly" />
            </td>
            <th>
                合同类别
            </th>
            <td>
                <input type="text" id="OrderType" name="OrderType" class="easyui-combobox" required="true" readonly="readonly" />
            </td>
            <th>
                附件
            </th>
            <td> 
                <input type="text" name="Enclosure" class="easyui-validatebox" style="float:left;" readonly="readonly" value="@Model.Enclosure" />
            </td>
        </tr>
        <tr style="height: 38px;">
            <th>
                备注
            </th>
            <td colspan="3">
                <input type="text" name="Remake" class="easyui-validatebox" style="width:532px" maxlength="200" value="@Model.Remake" />
            </td>
            <th>
                经手人
            </th>
            <td>
                <span>@Model.ZsName</span>
            </td>
        </tr>
        <tr>
            <td colspan="6">
                <table id="grid">
                </table>
            </td>
        </tr>
        @if (!ViewBag.AddType)
        {
            <tr>
                <th colspan="6">
                    <fieldset>
                        <legend>单据状态</legend><span class="sT">发票状态</span><span class="sV">@Model.InvoiceFlagName</span>
                        <span class="sT">发票金额</span><span class="sV">0.00</span> <span class="sT">回款状态</span><span
                            class="sV">@Model.PaymentFlagName</span> <span class="sT">回款金额</span><span class="sV">0.00</span>
                        <span class="sT">出库状态</span><span class="sV">@Model.OutStockFlagName</span><span class="sT">审核状态</span><span
                                class="sV">@Model.CheckFlagName</span> <span class="sT">审核日期</span><span class="sV">@Model.CheckDate</span>
                        <span class="sT">完成状态</span><span class="sV">@(Model.Finshed?"已完成":"未完成")</span>
                    </fieldset>
                </th>
            </tr>   
        }
    </tbody>
</table>
</form>